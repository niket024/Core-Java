package com.nik.problems;

import java.util.Arrays;

public class SpiralArray2D {
	public static void main(String[] args) {
		int arr[][] = genSpiral(3);
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j++) {
				System.out.println(arr[i][i]);
			}
		}
	}

	public static int[][] genSpiral(int n) {
		if (n <= 0) {
			throw new IllegalArgumentException("N must be >0");
		}
		int[] dc = new int[] { 1, 0, -1, 0 };
		int[] dr = new int[] { 0, 1, 0, -1 };
		int dir = 0, val = 0, r = 0, c = 0, limit = n * n;
		int[][] matrix = new int[n][n];
		while (val++ < limit) {
			matrix[r][c] = val;
			r += dr[dir];
			c += dc[dir];
			if (isInvalid(matrix, r, c)) {
				r -= dr[dir];
				c -= dc[dir];
				dir = (dir + 1) % 4;
				r += dr[dir];
				c += dc[dir];
			}
		}
		return matrix;
	}

	private static boolean isInvalid(int[][] m, int r, int c) {
		return r < 0 || c < 0 || r >= m.length || c >= m.length || m[r][c] != 0;
	}
}
